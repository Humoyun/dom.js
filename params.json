{"name":"Dom.js","tagline":"Micro javascript dom library","body":"DOM.js\r\n======\r\n\r\nDOM.js is a lightweight, fast cross browser library for DOM traversal, manipulation and event handling.\r\n\r\nOnly 10KB!\r\n\r\nAPI Reference\r\n=============\r\n\r\n###Table of contents\r\n\r\n - DOM traversal\r\n    - [Dom.find](#domfindselector)\r\n    - [Dom.id](#domidid)\r\n    - [Dom.findByTagName](#domfindbytagnametagname)\r\n    - [Dom.findByClass](#domfindbyclassclassname)\r\n    - [Dom.parent](#domparentelement)\r\n    - [Dom.children](#domchildrenelement-tag)\r\n    - [Dom.next](#domnextelement)\r\n    - [Dom.previous](#dompreviouselement)\r\n\r\n - DOM manipulation\r\n    - [Dom.attribute]()\r\n    - [Dom.css]()\r\n    - [Dom.getClass]()\r\n    - [Dom.addClass]()\r\n    - [Dom.hasClass]()\r\n    - [Dom.removeClass]()\r\n    - [Dom.create]()\r\n    - [Dom.html]()\r\n    - [Dom.text]()\r\n    - [Dom.append]()\r\n    - [Dom.prepend]()\r\n    - [Dom.after]()\r\n    - [Dom.before]()\r\n    - [Dom.replace]()\r\n    - [Dom.remove]()\r\n\r\n - Event handling\r\n    - [Dom.addListener](#domaddlistener-element-event-listener)\r\n    - [Dom.removeListener](#domremovelistener-element-event-listener)\r\n    - [Dom.hasListener](#domhaslistener-element-event-listener)\r\n    - [Dom.dispatch](#domdispatch-element-event-options)\r\n\r\n - [Dom Events](#dom-events)\r\n    - [Mouse Events](#mouse-events)\r\n        - `click`\r\n        - `dblclick`\r\n        - `mouseover`\r\n        - `mouseout`\r\n        - `mousedown`\r\n        - `mouseup`\r\n        - `mouseenter`\r\n        - `mouseleave`\r\n        - `mousemove`\r\n    - [Form Events](#form-events)\r\n        - `focus`\r\n        - `blur`\r\n        - `select`\r\n        - `change`\r\n        - `submit`\r\n        - `reset`\r\n    - [Keyboard Events](#keyboard-events)\r\n        - `keydown`\r\n        - `keyup`\r\n        - `keypress`\r\n\r\n### Dom.find(`selector`)\r\n\r\nFinds HTMLElements that match css pattern.\r\n\r\n*Supported from IE 8.0, FF 3.5, Chrome 4.0, Safari 3.1*\r\n\r\n#### Parameters\r\n - `selector` css seletor eg.(`ul > li`)\r\n\r\n#### [Example](examples/dom.find.html)\r\n\r\n\r\n### Dom.id(`id`)\r\n\r\nReturns HTMLElement with given id\r\n\r\n#### Parameters\r\n - `id` element's id\r\n\r\n#### [Example](examples/dom.id.html)\r\n\r\n### Dom.findByTagName(`tagName`)\r\n\r\nFinds HTMLElements that match given tag name\r\n\r\n#### Parameters\r\n - `tagName` tag's name eg.(a, span, div, etc)\r\n\r\n#### [Example](examples/dom.findbytagname.html)\r\n\r\n### Dom.findByClass(`className`)\r\n\r\nFinds HTMLElements that match given class name\r\n\r\n*Supported from IE 8.0, FF 3.5, Chrome 4.0, Safari 3.1*\r\n\r\n#### Parameters\r\n - `className` css class name\r\n\r\n#### [Example](examples/dom.findbyclassname.html)\r\n\r\n### Dom.parent(`element`)\r\n\r\nGets the parent of the html element\r\n\r\n#### Parameters\r\n - `element` html element\r\n\r\n#### [Example](examples/dom.parent.html)\r\n\r\n### Dom.children(`element`, `tag`)\r\n\r\nGets children elements of the html element\r\n\r\n#### Parameters\r\n - `element` html element\r\n - `tag` determines whether text nodes should be returned or tells function to filter children by tagname\r\n\r\n#### [Example](examples/dom.children.html)\r\n\r\n\r\n### Dom.next(`element`)\r\n\r\nGets following sibling element of the HTMLElement\r\n\r\n#### Parameters\r\n - `element` html element\r\n\r\n#### [Example](examples/dom.next.html)\r\n\r\n### Dom.previous(`element`)\r\n\r\nGets previous sibling element of the HTMLElement\r\n\r\n#### Parameters\r\n - `element` html element\r\n\r\n#### [Example](examples/dom.previous.html)\r\n\r\n### Dom.attribute(`element`, `attribute`)\r\n\r\nGets or sets element's attribute(s) if the attribute(s) is not defined this method returns an empty string\r\n\r\n#### Parameters\r\n - `element` html element\r\n - `attribute` attribute name, array of attribute names or object\r\n\r\n#### [Example](examples/dom.attribute.html)\r\n\r\n### Dom.css(`element`, `style`)\r\n\r\nSets or gets HTMLElement's style\r\n\r\n#### Parameters\r\n - `element` html element\r\n - `style` css property name, array of css properties or object\r\n\r\n#### [Example](examples/dom.css.html)\r\n\r\n### Dom.getClass(`element`)\r\n\r\nGets css classes of the given element\r\n\r\n#### Parameters\r\n - `element` html element\r\n\r\n#### [Example](examples/dom.getclass.html)\r\n\r\n### Dom.addClass(`element`, `className`)\r\n\r\nAssignes css class(es) to the html element(s)\r\n\r\n#### Parameters\r\n - `element` html element or array of elements\r\n - `className` class(es) that will be assigned to the element\r\n\r\n#### [Example](examples/dom.addclass.html)\r\n\r\n### Dom.hasClass(`element`, `className`)\r\n\r\nChecks whether html element is assigned to the given class(es)\r\n\r\n#### Parameters\r\n - `element` html element or array of elements\r\n - `className` class that function will check against\r\n\r\n#### [Example](examples/dom.hasclass.html)\r\n\r\n### Dom.removeClass(`element`, `className`)\r\n\r\nRemoves html element's assignment to the css class(es)\r\n\r\n#### Parameters\r\n - `element` html element or array of elements\r\n - `className` class(es) that will be removed from the element's class attribute\r\n\r\n#### [Example](examples/dom.removeclass.html)\r\n\r\n### Dom.create(`html`)\r\n\r\nCreates and returns html element created from provided content\r\n\r\n#### Parameters\r\n - `html` html string\r\n\r\n #### [Example](examples/dom.create.html)\r\n\r\n#### Parameters\r\n - `html` string containings element's html\r\n - `className` class(es) that will be removed from the element's class attribute\r\n\r\n#### [Example](examples/dom.removeclass.html)\r\n\r\n### Dom.addListener (`element`, `event`, `listener`)\r\n\r\nAttaches javascript listener to the element(s) for the given event type.\r\n\r\n#### Parameters\r\n\r\n - `element` a DOMElement, NodeList or just an array with DOMElements\r\n - `event` a dom event name, eg. (`click`, `dblclick`, etc.)\r\n - `listener` a javascript function wich will be called when given event occurs\r\n\r\nDom.js also offers aliases for `Dom.addListener` function.\r\nYou can check list of aliases, explanation and event names [here](#dom-events).\r\n\r\n#### [Example](examples/dom.addlistener.html)\r\n\r\n### Dom.removeListener (`element`, `event`, `listener`)\r\n\r\nRemoves javascript listener from the element(s) for the given event type.\r\n\r\n#### Parameters\r\n\r\n - `element` a DOMElement, NodeList or just an array with DOMElements\r\n - `event` a dom event name, eg. (`click`, `dblclick`, etc.)\r\n - `listener` a javascript function wich will be called when given event occurs\r\n\r\n### Dom.dispatch (`element`, `event`, `options`)\r\n\r\nExecute all handlers and behaviors attached to the element(s) for the given event type\r\n\r\n#### Parameters\r\n\r\n - `element` a DOMElement, NodeList or just an array with DOMElements\r\n - `event` a dom event name, eg. (`click`, `dblclick`, etc.)\r\n - `options` event options object eg. (`screenX`, `screenY`, etc.)\r\n\r\n### Dom.hasListener (`element`, `event`, `listener`)\r\n\r\nDetermine whether a supplied listener is attached to the element\r\n\r\n#### Parameters\r\n\r\n - `element` a DOMElement, NodeList or just an array with DOMElements\r\n - `event` a dom event name, eg. (`click`, `dblclick`, etc.)\r\n - `listener` a javascript callback function\r\n\r\n###DOM Events\r\n\r\n#### Mouse Events\r\n\r\n#####`click` Dom.onClick(`element`, `listener`)\r\nA pointing device button has been pressed and released on an element.\r\n\r\n#####`dblclick` Dom.onDblClick(`element`, `listener`)\r\nA pointing device button is clicked twice on an element.\r\n\r\n#####`mouseover` Dom.onMouseOver(`element`, `listener`)\r\nA pointing device is moved onto the element that has the listener attached or onto one of its children.\r\n\r\n#####`mouseout` Dom.onMouseOut(`element`, `listener`)\r\nA pointing device is moved off the element that has the listener attached or off one of its children.\r\n\r\n#####`mousedown` Dom.onMouseOut(`element`, `listener`)\r\nA pointing device button (usually a mouse) is pressed on an element.\r\n\r\n#####`mouseup` Dom.onMouseUp(`element`, `listener`)\r\nA pointing device button is released over an element.\r\n\r\n#####`mouseenter` Dom.onMouseEnter(`element`, `listener`)\r\nA pointing device is moved onto the element that has the listener attached.\r\n\r\n#####`mouseleave` Dom.onMouseLeave(`element`, `listener`)\r\nA pointing device is moved off the element that has the listener attached.\r\n\r\n#####`mousemove` Dom.onMouseMove(`element`, `listener`)\r\nA pointing device is moved over an element.\r\n\r\n\r\n### Form Events\r\n\r\n#####`focus` Dom.onFocus(`element`, `listener`)\r\nAn element has received focus (does not bubble).\r\n\r\n#####`blur` Dom.onBlur(`element`, `listener`)\r\nAn element has lost focus (does not bubble).\r\n\r\n#####`select` Dom.onSelect(`element`, `listener`)\r\nSome text is input being selected.\r\n\r\n#####`change` Dom.onChange(`element`, `listener`)\r\nAn element loses focus and its value changed since gaining focus.\r\n\r\n#####`submit` Dom.onSubmit`element`, `listener`)\r\nA form is submitted.\r\n\r\n#####`reset` Dom.onReset(`element`, `listener`)\r\nA form is reset.\r\n\r\n### Keyboard Events\r\n\r\n#####`keydown` Dom.onKeyDown(`element`, `listener`)\r\nA key is pressed down.\r\n\r\n#####`keyup` Dom.onKeyUp(`element`, `listener`)\r\nA key is released.\r\n\r\n#####`keypress` Dom.onKeyPress(`element`, `listener`)\r\nA key is pressed down and that key normally produces a character value (use input instead).\r\n\r\n### Drag Events\r\n\r\n#####`drag` Dom.onDrag(`element`, `listener`)\r\nAn element or text selection is being dragged (every 350ms).\r\n\r\n#####`dragstart` Dom.onDragStart(`element`, `listener`)\r\nThe user starts dragging an element or text selection.\r\n\r\n#####`dragend` Dom.onDragEnd(`element`, `listener`)\r\nA drag operation is being ended (by releasing a mouse button or hitting the escape key).\r\n\r\n### UI Events\r\n\r\n#####`load` Dom.onLoad(`element`, `listener`)\r\nA resource and its dependent resources have finished loading.\r\n\r\n#####`scroll` Dom.onScroll(`element`, `listener`)\r\nThe document view or an element has been scrolled.\r\n\r\n#####`unload` Dom.onUnload(`element`, `listener`)\r\nThe document or a dependent resource is being unloaded.\r\n\r\n#####`resize` Dom.onResize(`element`, `listener`)\r\nThe document view has been resized.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}